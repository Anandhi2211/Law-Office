package com.solvd.law_office;

import com.solvd.law_office.bin.Court;
import com.solvd.law_office.service.impl.*;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import java.io.File;
import java.io.IOException;

public class Main {
    private static final Logger logger = LogManager.getLogger(Main.class);

    public static void main(String[] args) {
        DataGenerator data = new DataGenerator();
        LawFirmServiceImpl lawFirmService = new LawFirmServiceImpl();
        AttorneyServiceImpl attorneyService = new AttorneyServiceImpl();
        AttorneyAssociationBarServiceImpl attorneyAssociationBarService = new AttorneyAssociationBarServiceImpl();
        AssociationBarServiceImpl associationBarService = new AssociationBarServiceImpl();
        AreaOfPracticeServiceImpl areaOfPracticesService = new AreaOfPracticeServiceImpl();
//        logger.info("Inserting data into Association_Bars Table");
//        for (AssociationBar associationBar : data.associationBarCreation()) {
//            associationBarService.insert(associationBar);
//        }
//        logger.info("Inserting data into Law_firms, Attorneys, AttorneyAssociationBar Tables");
//        for (LawFirm lawFirm : data.lawFirmCreation()) {
//            lawFirmService.insert(lawFirm);
//        }
//        logger.info("Finding Attorney by ID");
//        Optional<Attorney> attorneyList = attorneyService.findById(1001);
//        if (attorneyList.isPresent()) {
//            ArrayList<Attorney> newList = (ArrayList<Attorney>) attorneyList.stream().collect(Collectors.toList());
//            for (Attorney attorney : newList) {
//                logger.info("Name: " + attorney.getAttorneyName());
//                logger.info("Id: " + attorney.getAttorneyId());
//                logger.info("country: " + attorney.getCountry());
//                logger.info("city: " + attorney.getCity());
//                logger.info("LawFirm: " + attorney.getLawFirmId());
//            }
//        }
//        logger.info("Finding Attorney By country Name");
//        ArrayList<Attorney> attorneyList1 = attorneyService.findByCountry("USA");
//        if (attorneyList1 != null) {
//            for (Attorney attorney : attorneyList1) {
//                logger.info("Name: " + attorney.getAttorneyName());
//                logger.info("country: " + attorney.getCountry());
//            }
//        }
//        logger.info("Adding Attorney Area of practices");
//        for (AreaOfPractice areaOfPractice : data.AreaOfPractices()) {
//            areaOfPracticesService.insert(areaOfPractice);
//        }
//        logger.info("Deleting 1 Association bar from Association bar table as well as attorney Association bar table");
//        associationBarService.deleteById(101);
//        logger.info("Updating Attorney city");
//        attorneyService.updateCityById(1000, "Dayton");
//        logger.info("Adding Association Bar to an attorney");
//        attorneyAssociationBarService.addAssociationBar(1000, 102);

        File file = new File("src/main/resources/lawfirm.xml");
        DocumentBuilderFactory factory =
                DocumentBuilderFactory.newInstance();
        try {
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document document = builder.parse(file);
            document.getDocumentElement().normalize();
            logger.info("Root Element " + document.getDocumentElement().getNodeName());

            NodeList courtList = document.getElementsByTagName("court");
//            NodeList courtList = courts
            for (int temp = 0; temp < courtList.getLength(); temp++) {
                Node courtNode = courtList.item(temp);
                logger.info("Current Node:**********" + courtNode.getNodeName());
                if (courtNode.getNodeType() == courtNode.ELEMENT_NODE) {
                    Element courtElement = (Element) courtNode;
                    logger.info("Id :" + courtElement.getAttribute("id") );
                    logger.info("country: " + courtElement.getElementsByTagName("country").item(0).getTextContent());
                    logger.info("city: " + courtElement.getElementsByTagName("city").item(0).getTextContent());
                    NodeList caseNodeList = ((Element) courtElement).getElementsByTagName("case");
                    for (int temp1 = 0; temp1 < caseNodeList.getLength(); temp1++) {
                        Node caseNode = caseNodeList.item(temp1);
                        logger.info("Current Node:**********" + caseNode.getNodeName());

                        if (caseNode.getNodeType() == caseNode.ELEMENT_NODE) {
                            Element caseElement = (Element) caseNode;
                            logger.info("case id: " + caseElement.getAttribute("id"));
                            logger.info("case description: " + caseElement.getElementsByTagName("case_description").item(0).getTextContent());
                            logger.info("client Id: " + caseElement.getElementsByTagName("client_id").item(0).getTextContent());
                            logger.info("Attorney Id: " + caseElement.getElementsByTagName("attorney_id").item(0).getTextContent());
                            logger.info("case category: " + caseElement.getElementsByTagName("case_category_id").item(0).getTextContent());
                        }
                    }
                    NodeList judgeNodeList = ((Element) courtElement).getElementsByTagName("judge");
                    for (int temp2 = 0; temp2 < judgeNodeList.getLength(); temp2++) {
                        Node judgeNode = judgeNodeList.item(temp2);
                        logger.info("Current Node:**********" + judgeNode.getNodeName());
                        if (judgeNode.getNodeType() == judgeNode.ELEMENT_NODE) {
                            Element judgeElement = (Element) judgeNode;
                            logger.info("Id :" + judgeElement.getAttribute("id"));
                            logger.info("judge Name: " + judgeElement.getElementsByTagName("judge_name").item(0).getTextContent());
                        }
                    }
                }
                logger.info("******");
            }
        } catch (ParserConfigurationException | IOException | SAXException e) {
            throw new RuntimeException(e);
        }

    }

}
